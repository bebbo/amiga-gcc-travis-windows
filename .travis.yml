os: windows
language: shell
cache:
  directories:
  - /c/Users/travis/build/bebbo/crap0000/amiga/
  directories:
  - /c/Users/travis/build/bebbo/crap0000/msys64/
jobs:
  include:
  - stage: Setup cache
    script:
    - rm -rf amiga
    - mkdir -p amiga
    - if [ ! -f msys64/usr/bin/bash.exe ]; then wget --progress=bar:force https://franke.ms/msys64.tgz; rm -rf msys64; tar xzf msys64.tgz; fi
  - stage: make binutils
    script:
    - git clone https://github.com/bebbo/amiga-gcc
    - powershell -executionpolicy bypass -command "msys64\\usr\\bin\\bash.exe --login -c 'cd amiga-gcc && (PREFIX=$(realpath amiga) make -j3 info binutils gdb gprof & pid=$!; while kill -0 $pid; do date; sleep 30; done)'"
  - stage: make gcc
    script:
    - git clone https://github.com/bebbo/amiga-gcc
    - mkdir -p      amiga-gcc/projects/binutils
    - echo "fake" > amiga-gcc/projects/binutils/configure
    - mkdir -p      amiga-gcc/build-MSYS_NT-10.0/binutils 
    - echo "fake" > amiga-gcc/build-MSYS_NT-10.0/binutils/Makefile
    - echo "done" > amiga-gcc/build-MSYS_NT-10.0/binutils/_done
    - powershell -executionpolicy bypass -command "msys64\\usr\\bin\\bash.exe --login -c 'cd amiga-gcc && (PREFIX=$(realpath amiga) make -j3 info gcc & pid=$!; while kill -0 $pid; do date; sleep 30; done)'"
  - stage: make ndk
    script:
    - git clone https://github.com/bebbo/amiga-gcc
    - mkdir -p      amiga-gcc/projects/binutils
    - echo "fake" > amiga-gcc/projects/binutils/configure
    - mkdir -p      amiga-gcc/build-MSYS_NT-10.0/binutils 
    - echo "fake" > amiga-gcc/build-MSYS_NT-10.0/binutils/Makefile
    - echo "done" > amiga-gcc/build-MSYS_NT-10.0/binutils/_done
    - powershell -executionpolicy bypass -command "msys64\\usr\\bin\\bash.exe --login -c 'cd amiga-gcc && PREFIX=$(realpath amiga) make -j3 info ndk ndk13'"
  - stage: make newlib
    script:
    - git clone https://github.com/bebbo/amiga-gcc
    - mkdir -p      amiga-gcc/projects/binutils
    - echo "fake" > amiga-gcc/projects/binutils/configure
    - mkdir -p      amiga-gcc/build-MSYS_NT-10.0/binutils 
    - echo "fake" > amiga-gcc/build-MSYS_NT-10.0/binutils/Makefile
    - echo "done" > amiga-gcc/build-MSYS_NT-10.0/binutils/_done
    - mkdir -p      amiga-gcc/build-MSYS_NT-10.0/gcc
    - echo "done" > amiga-gcc/build-MSYS_NT-10.0/gcc/_done
    - echo "done" > amiga-gcc/build-MSYS_NT-10.0/ndk-include_ndk
    - powershell -executionpolicy bypass -command "msys64\\usr\\bin\\bash.exe --login -c 'cd amiga-gcc && (PREFIX=$(realpath amiga) make -j3 info newlib & pid=$!; while kill -0 $pid; do date; sleep 30; done)'"
  - stage: make libnix
    script:
    - git clone https://github.com/bebbo/amiga-gcc
    - mkdir -p      amiga-gcc/projects/binutils
    - echo "fake" > amiga-gcc/projects/binutils/configure
    - mkdir -p      amiga-gcc/build-MSYS_NT-10.0/binutils 
    - echo "fake" > amiga-gcc/build-MSYS_NT-10.0/binutils/Makefile
    - echo "done" > amiga-gcc/build-MSYS_NT-10.0/binutils/_done
    - mkdir -p      amiga-gcc/build-MSYS_NT-10.0/gcc
    - echo "done" > amiga-gcc/build-MSYS_NT-10.0/gcc/_done
    - mkdir -p      amiga-gcc/build-MSYS_NT-10.0/newlib
    - echo "done" > amiga-gcc/build-MSYS_NT-10.0/newlib/_done
    - echo "done" > amiga-gcc/build-MSYS_NT-10.0/ndk-include_ndk
    - echo "done" > amiga-gcc/build-MSYS_NT-10.0/ndk-include_ndk
    - powershell -executionpolicy bypass -command "msys64\\usr\\bin\\bash.exe --login -c 'cd amiga-gcc && (PREFIX=$(realpath amiga) make -j3 info libnix clib2 & pid=$!; while kill -0 $pid; do date; sleep 30; done)'"
  - stage: create setup
    script:
    - choco install innosetup
    - git clone https://github.com/bebbo/amiga-gcc
    - echo "#define MyAppVersion \"$(date +%Y%m%d)\"" > setup2.iss
    - sed amiga-gcc/setup/setup2.iss -e "s|\\\\msys64\\\\opt\\\\amiga|$(echo $PWD | sed 's|/|\\\\|g' | cut -b4-)\\\\amiga|g" >> setup2.iss
    - cp  amiga-gcc/setup/icon.ico .
    - cp  amiga-gcc/setup/hello.c amiga
    - cp  amiga-gcc/setup/cmdline.bat amiga
    - cp  amiga-gcc/setup/bat2exe.exe amiga/bin/
    - echo copy dlls
    - cp msys64/usr/bin/msys-iconv-2.dll   amiga/bin
    - cp msys64/usr/bin/msys-intl-8.dll    amiga/bin
    - cp msys64/usr/bin/msys-2.0.dll       amiga/bin
    - cp msys64/usr/bin/msys-z.dll         amiga/bin
    - cp msys64/usr/bin/msys-gcc_s-seh-1.dll amiga/bin
    - cp msys64/usr/bin/msys-stdc++-6.dll  amiga/bin
    - cp msys64/usr/bin/msys-mpfr-6.dll    amiga/bin
    - cp msys64/usr/bin/msys-mpc-3.dll     amiga/bin
    - cp msys64/usr/bin/msys-gmp-10.dll    amiga/bin
    - cp msys64/usr/bin/msys-ncursesw6.dll amiga/bin
    - cp msys64/usr/bin/iconv.exe amiga/bin
    - cp msys64/usr/bin/sh.exe    amiga/bin
    - cp msys64/usr/bin/rm.exe    amiga/bin
    - cp msys64/usr/bin/cp.exe    amiga/bin
    - cp msys64/usr/bin/uname.exe amiga/bin
    - cp msys64/usr/bin/which.exe amiga/bin
    - cp msys64/usr/bin/make.exe  amiga/bin/_make.exe
    - powershell -executionpolicy bypass -command "cmd /c 'c:\\Program Files (x86)\\Inno Setup 5\\ISCC.exe' setup2.iss"
